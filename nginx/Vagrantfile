# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # Uncomment line below if you are using Hyper-V
  #config.vm.synced_folder ".", "/vagrant", type: "smb", mount_options: ["vers=2.1"]
  #config.vm.synced_folder ".", "/vagrant", type: "smb", smb_host: "172.21.48.1", mount_options: ["vers=2.1"]
  # config.vm.synced_folder ".", "/vagrant", {
  #   type: "smb", mount_options: ["vers=3.0"],
  #   smb_username: ENV["VAGRANT_SMB_USERNAME"],
  #   smb_password: ENV["VAGRANT_SMB_PASSWORD"]
  # }
  #config.vm.synced_folder ".", "/vagrant", type: "nfs"

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  #config.vm.box = "ubuntu/bionic64"
  
  config.vm.define :build001 do |server|
    server.vm.box = "centos/7"
    server.vm.hostname = "pflnginx01"
    server.vm.network "private_network", type: "dhcp"
    server.vm.provision "shell", path: "provision.sh"
  end

  #config.vm.provider "virtualbox" do |v|
  #  v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
  #end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #config.vm.provision "shell", inline: <<-SHELL
  #  apt -y update
  #  apt -y upgrade
  #  apt install -y build-essential git tree
  #  add-apt-repository -y ppa:maxmind/ppa
  #  apt update
  #  apt upgrade -y
  #  apt install -y perl libperl-dev libgd3 libgd-dev libgeoip1 libgeoip-dev geoip-bin libxml2 libxml2-dev libxslt1.1 libxslt1-dev
  #  rm -rf *.tar.gz
  #SHELL
  #config.vm.provision "shell", inline: <<-SHELL
  #  yum -y update
  #  yum -y install epel-release 
  #  yum -y install wget pcre pcre-devel zlib zlib-devel openssl openssl-devel
  #  yum -y groupinstall "Development Tools"
  #SHELL
  #config.vm.provision "file", source: "nginx.service", destination: "/lib/systemd/system/"
  #config.vm.provision "shell" do |s|
  #  s.inline = "cp /vagrant/nginx.service /lib/systemd/system/nginx.service"
  #  s.privileged = true
  #end
  
  #config.vm.provision "shell", inline: <<-SHELL
  #  systemctl enable nginx
  #  systemctl start nginx
  #SHELL

end